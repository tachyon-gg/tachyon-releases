name: Release Alpha CLI Build

on:
  workflow_dispatch:

jobs:
  release-alpha-cli:
    name: Release Alpha CLI Build
    runs-on: ubuntu-latest
    steps:
      - name: Find latest successful build_alpha_cli run
        id: find_run
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.TACHYON_CLIENT }}
          script: |
            const runs = await github.rest.actions.listWorkflowRuns({
              owner: 'tachyon-gg',
              repo: 'tachyon-client',
              workflow_id: 'build_alpha_cli.yml',
              branch: 'alpha',
              status: 'completed',
              per_page: 10
            });
            const successful = runs.data.workflow_runs.find(run => run.conclusion === 'success');
            if (!successful) throw new Error('No successful build_alpha_cli run found');
            core.setOutput('run_id', String(successful.id));

      - name: Download CLI artifact
        uses: actions/download-artifact@v4
        with:
          name: tachyon-cli-ubuntu-latest-alpha
          path: ./artifact-ubuntu
          repository: tachyon-gg/tachyon-client
          run-id: ${{ steps.find_run.outputs.run_id }}
          github-token: ${{ secrets.TACHYON_CLIENT }}
          
      - name: Download CLI artifact (macOS)
        uses: actions/download-artifact@v4
        with:
          name: tachyon-cli-macos-latest-alpha
          path: ./artifact-macos
          repository: tachyon-gg/tachyon-client
          run-id: ${{ steps.find_run.outputs.run_id }}
          github-token: ${{ secrets.TACHYON_CLIENT }}

      - name: Download CLI artifact (Windows)
        uses: actions/download-artifact@v4
        with:
          name: tachyon-cli-windows-latest-alpha
          path: ./artifact-windows
          repository: tachyon-gg/tachyon-client
          run-id: ${{ steps.find_run.outputs.run_id }}
          github-token: ${{ secrets.TACHYON_CLIENT }}

      - name: Set version from artifact (fallback to timestamp)
        id: version
        run: |
          # Try to extract version from a file, or fallback to timestamp
          VERSION_FILE=$(find ./artifact-ubuntu ./artifact-macos ./artifact-windows -type f -name "*.json" | head -n 1)
          if [ -n "$VERSION_FILE" ]; then
            VERSION=$(jq -r '.version' "$VERSION_FILE")
          else
            VERSION="manual-$(date +%Y%m%d%H%M%S)"
          fi
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Release to public repo
        uses: softprops/action-gh-release@v2
        with:
          tag_name: alpha-${{ steps.version.outputs.version }}
          name: Alpha Build ${{ steps.version.outputs.version }}
          token: ${{ secrets.TACHYON_RELEASE }}
          files: |
            artifact-ubuntu/**
            artifact-macos/**
            artifact-windows/**
          draft: false
          prerelease: true